local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local TextService = game:GetService("TextService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer
local NotifGui = Instance.new("ScreenGui")
NotifGui.Name = "FlatNotif"
NotifGui.Parent = RunService:IsStudio() and Player:WaitForChild("PlayerGui") or game:GetService("CoreGui")

local Container = Instance.new("Frame")
Container.Name = "Container"
Container.AnchorPoint = Vector2.new(1, 1)
Container.Position = UDim2.new(1, -20, 1, -20)
Container.Size = UDim2.new(0, 300, 1, 0)
Container.BackgroundTransparency = 1
Container.Parent = NotifGui

local Padding = 10
local NotifGap = 40
local TweenTime = 0.25
local ActiveNotifs = {}

local Font = Enum.Font.Code
local FontSize = 19

local function createNotification(text, duration)
	duration = duration or 4
	local labelWidth = Container.AbsoluteSize.X
	local bounds = TextService:GetTextSize(text, FontSize, Font, Vector2.new(labelWidth - 20, math.huge))

	local Frame = Instance.new("Frame")
	Frame.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
	Frame.Size = UDim2.new(0, bounds.X + 20, 0, bounds.Y + 10 + 3)
	Frame.AnchorPoint = Vector2.new(1, 1)
	Frame.Position = UDim2.new(1, 0, 1, -10)
	Frame.BorderSizePixel = 0
	Frame.Parent = Container

	local TextLabel = Instance.new("TextLabel")
	TextLabel.Text = text
	TextLabel.Font = Font
	TextLabel.TextSize = FontSize
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Size = UDim2.new(1, -20, 1, -13) -- leave room for progress bar
	TextLabel.Position = UDim2.fromOffset(10, 5)
	TextLabel.TextXAlignment = Enum.TextXAlignment.Center
	TextLabel.TextYAlignment = Enum.TextYAlignment.Center
	TextLabel.Parent = Frame

	local ProgressBar = Instance.new("Frame")
	ProgressBar.BackgroundColor3 = Color3.fromRGB(86, 180, 211)
	ProgressBar.Size = UDim2.new(1, 0, 0, 3)
	ProgressBar.Position = UDim2.new(0, 0, 1, -3)
	ProgressBar.BorderSizePixel = 0
	ProgressBar.Parent = Frame

	table.insert(ActiveNotifs, 1, Frame)

	for i, notif in ipairs(ActiveNotifs) do
		local goalY = -(i - 1) * NotifGap - 10
		TweenService:Create(notif, TweenInfo.new(TweenTime, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
			Position = UDim2.new(1, 0, 1, goalY)
		}):Play()
	end

	TweenService:Create(ProgressBar, TweenInfo.new(duration, Enum.EasingStyle.Linear), {
		Size = UDim2.new(0, 0, 0, 3)
	}):Play()

	task.delay(duration, function()
		TweenService:Create(Frame, TweenInfo.new(0.25), {BackgroundTransparency = 1}):Play()
		TweenService:Create(TextLabel, TweenInfo.new(0.25), {TextTransparency = 1}):Play()
		TweenService:Create(ProgressBar, TweenInfo.new(0.25), {BackgroundTransparency = 1}):Play()
		task.wait(0.25)
		local index = table.find(ActiveNotifs, Frame)
		if index then
			table.remove(ActiveNotifs, index)
			Frame:Destroy()
			for i = index, #ActiveNotifs do
				local n = ActiveNotifs[i]
				local goalY = -(i - 1) * NotifGap - 10
				TweenService:Create(n, TweenInfo.new(TweenTime), {
					Position = UDim2.new(1, 0, 1, goalY)
				}):Play()
			end
		end
	end)
end

return {
	Notify = createNotification
}
